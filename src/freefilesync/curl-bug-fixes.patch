#
# Implement changes documented in FreeFileSync_14.0/Bugs.txt.
#
--- a/lib/ftp.c	2025-01-21 22:40:57.732578817 -0500
+++ b/lib/ftp.c	2025-01-22 16:53:57.840383118 -0500
@@ -1774,6 +1774,17 @@
   return TRUE;
 }
 
+static bool is_routable_ip_v4(unsigned int ip[4])
+{
+    if(ip[0] == 127 || //127.0.0.0/8 (localhost)
+       ip[0] == 10  || //10.0.0.0/8 (private)
+       (ip[0] == 192 && ip[1] == 168) ||  //192.168.0.0/16 (private)
+       (ip[0] == 169 && ip[1] == 254) ||  //169.254.0.0/16 (link-local)
+       (ip[0] == 172 && ip[1] / 16 == 1)) //172.16.0.0/12 (private)
+        return false;
+    return true;
+}
+
 static CURLcode ftp_state_pasv_resp(struct Curl_easy *data,
                                     int ftpcode)
 {
@@ -1851,7 +1862,16 @@
     }
 
     /* we got OK from server */
-    if(data->set.ftp_skip_ip) {
+    bool skipIp = data->set.ftp_skip_ip;
+    if(!skipIp && !is_routable_ip_v4(ip))
+    {
+        unsigned int ip_ctrl[4];
+        if(4 != sscanf(control_address(conn), "%u.%u.%u.%u",
+           &ip_ctrl[0], &ip_ctrl[1], &ip_ctrl[2], &ip_ctrl[3]) ||
+           is_routable_ip_v4(ip_ctrl))
+            skipIp = true;
+    }
+    if (skipIp) {
       /* told to ignore the remotely given IP but instead use the host we used
          for the control connection */
       infof(data, "Skip %u.%u.%u.%u for data connection, reuse %s instead",
@@ -3645,7 +3665,7 @@
 
         /* But only if a body transfer was requested. */
         if(ftp->transfer == PPTRANSFER_BODY) {
-          result = ftp_nb_type(data, conn, TRUE, FTP_LIST_TYPE);
+          result = ftp_nb_type(data, conn, data->set.prefer_ascii, FTP_LIST_TYPE);
           if(result)
             return result;
         }
